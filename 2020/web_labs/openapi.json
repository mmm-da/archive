{
  "openapi": "3.0.3",
  "info": {
    "title": "",
    "version": "0.0.0"
  },
  "paths": {
    "/api/category/": {
      "get": {
        "operationId": "api_category_list",
        "description": "",
        "tags": [
          "Thing Category"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThingCategory"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "api_category_create",
        "description": "",
        "tags": [
          "Thing Category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThingCategory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ThingCategory"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ThingCategory"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingCategory"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/category/{id}/": {
      "get": {
        "operationId": "api_category_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing category.",
            "required": true
          }
        ],
        "tags": [
          "Thing Category"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingCategory"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "api_category_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing category.",
            "required": true
          }
        ],
        "tags": [
          "Thing Category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThingCategory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ThingCategory"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ThingCategory"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingCategory"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "api_category_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing category.",
            "required": true
          }
        ],
        "tags": [
          "Thing Category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThingCategory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThingCategory"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThingCategory"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingCategory"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "api_category_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing category.",
            "required": true
          }
        ],
        "tags": [
          "Thing Category"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/instances/": {
      "get": {
        "operationId": "api_instances_list",
        "description": "",
        "tags": [
          "Thing Instance"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThingInstance"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "api_instances_create",
        "description": "",
        "tags": [
          "Thing Instance"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThingInstance"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ThingInstance"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ThingInstance"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingInstance"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/instances/{id}/": {
      "get": {
        "operationId": "api_instances_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing instance.",
            "required": true
          }
        ],
        "tags": [
          "Thing Instance"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingInstance"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "api_instances_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing instance.",
            "required": true
          }
        ],
        "tags": [
          "Thing Instance"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThingInstance"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ThingInstance"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ThingInstance"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingInstance"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "api_instances_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing instance.",
            "required": true
          }
        ],
        "tags": [
          "Thing Instance"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThingInstance"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThingInstance"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThingInstance"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingInstance"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "api_instances_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing instance.",
            "required": true
          }
        ],
        "tags": [
          "Thing Instance"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/schema/": {
      "get": {
        "operationId": "api_schema_retrieve",
        "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "yaml"
              ]
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string",
              "enum": [
                "af",
                "ar",
                "ar-dz",
                "ast",
                "az",
                "be",
                "bg",
                "bn",
                "br",
                "bs",
                "ca",
                "cs",
                "cy",
                "da",
                "de",
                "dsb",
                "el",
                "en",
                "en-au",
                "en-gb",
                "eo",
                "es",
                "es-ar",
                "es-co",
                "es-mx",
                "es-ni",
                "es-ve",
                "et",
                "eu",
                "fa",
                "fi",
                "fr",
                "fy",
                "ga",
                "gd",
                "gl",
                "he",
                "hi",
                "hr",
                "hsb",
                "hu",
                "hy",
                "ia",
                "id",
                "ig",
                "io",
                "is",
                "it",
                "ja",
                "ka",
                "kab",
                "kk",
                "km",
                "kn",
                "ko",
                "ky",
                "lb",
                "lt",
                "lv",
                "mk",
                "ml",
                "mn",
                "mr",
                "my",
                "nb",
                "ne",
                "nl",
                "nn",
                "os",
                "pa",
                "pl",
                "pt",
                "pt-br",
                "ro",
                "ru",
                "sk",
                "sl",
                "sq",
                "sr",
                "sr-latn",
                "sv",
                "sw",
                "ta",
                "te",
                "tg",
                "th",
                "tk",
                "tr",
                "tt",
                "udm",
                "uk",
                "ur",
                "uz",
                "vi",
                "zh-hans",
                "zh-hant"
              ]
            }
          }
        ],
        "tags": [
          "api"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.oai.openapi": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/vnd.oai.openapi+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/sections/": {
      "get": {
        "operationId": "api_sections_list",
        "description": "",
        "tags": [
          "Section"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Section"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "api_sections_create",
        "description": "",
        "tags": [
          "Section"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Section"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Section"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Section"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/sections/{id}/": {
      "get": {
        "operationId": "api_sections_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this section.",
            "required": true
          }
        ],
        "tags": [
          "Section"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "api_sections_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this section.",
            "required": true
          }
        ],
        "tags": [
          "Section"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Section"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Section"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Section"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "api_sections_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this section.",
            "required": true
          }
        ],
        "tags": [
          "Section"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSection"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSection"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSection"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "api_sections_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this section.",
            "required": true
          }
        ],
        "tags": [
          "Section"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/storages/": {
      "get": {
        "operationId": "api_storages_list",
        "description": "",
        "tags": [
          "Storage"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Storage"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "api_storages_create",
        "description": "",
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Storage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Storage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Storage"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storage"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/storages/{id}/": {
      "get": {
        "operationId": "api_storages_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this storage.",
            "required": true
          }
        ],
        "tags": [
          "Storage"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storage"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "api_storages_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this storage.",
            "required": true
          }
        ],
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Storage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Storage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Storage"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storage"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "api_storages_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this storage.",
            "required": true
          }
        ],
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStorage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStorage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStorage"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storage"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "api_storages_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this storage.",
            "required": true
          }
        ],
        "tags": [
          "Storage"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/things/": {
      "get": {
        "operationId": "api_things_list",
        "description": "",
        "tags": [
          "Thing"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Thing"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "api_things_create",
        "description": "",
        "tags": [
          "Thing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Thing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Thing"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Thing"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thing"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/things/{id}/": {
      "get": {
        "operationId": "api_things_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing.",
            "required": true
          }
        ],
        "tags": [
          "Thing"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thing"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "api_things_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing.",
            "required": true
          }
        ],
        "tags": [
          "Thing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Thing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Thing"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Thing"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thing"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "api_things_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing.",
            "required": true
          }
        ],
        "tags": [
          "Thing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThing"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedThing"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thing"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "api_things_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this thing.",
            "required": true
          }
        ],
        "tags": [
          "Thing"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "operationId": "api_users_list",
        "description": "",
        "tags": [
          "User Info"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KorobasyUser"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/users/{id}/": {
      "get": {
        "operationId": "api_users_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this user.",
            "required": true
          }
        ],
        "tags": [
          "User Info"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KorobasyUser"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/jwt/create/": {
      "post": {
        "operationId": "auth_jwt_create_create",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPair"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/jwt/refresh/": {
      "post": {
        "operationId": "auth_jwt_refresh_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/jwt/verify/": {
      "post": {
        "operationId": "auth_jwt_verify_create",
        "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenVerify"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/": {
      "get": {
        "operationId": "auth_users_list",
        "description": "",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "auth_users_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/{id}/": {
      "get": {
        "operationId": "auth_users_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this user.",
            "required": true
          }
        ],
        "tags": [
          "auth"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "auth_users_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this user.",
            "required": true
          }
        ],
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "auth_users_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this user.",
            "required": true
          }
        ],
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUser"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "auth_users_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this user.",
            "required": true
          }
        ],
        "tags": [
          "auth"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/auth/users/activation/": {
      "post": {
        "operationId": "auth_users_activation_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Activation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Activation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Activation"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activation"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/me/": {
      "get": {
        "operationId": "auth_users_me_retrieve",
        "description": "",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "auth_users_me_update",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "auth_users_me_partial_update",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUser"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "auth_users_me_destroy",
        "description": "",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/auth/users/resend_activation/": {
      "post": {
        "operationId": "auth_users_resend_activation_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailReset"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/reset_password/": {
      "post": {
        "operationId": "auth_users_reset_password_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailReset"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/reset_password_confirm/": {
      "post": {
        "operationId": "auth_users_reset_password_confirm_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetConfirm"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/reset_username/": {
      "post": {
        "operationId": "auth_users_reset_username_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailReset"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/reset_username_confirm/": {
      "post": {
        "operationId": "auth_users_reset_username_confirm_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsernameResetConfirm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UsernameResetConfirm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsernameResetConfirm"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsernameResetConfirm"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/set_password/": {
      "post": {
        "operationId": "auth_users_set_password_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SetPassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SetPassword"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPassword"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/auth/users/set_username/": {
      "post": {
        "operationId": "auth_users_set_username_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUsername"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SetUsername"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SetUsername"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetUsername"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Activation": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token",
          "uid"
        ]
      },
      "KorobasyUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "storages": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "storages",
          "username"
        ]
      },
      "PasswordResetConfirm": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          }
        },
        "required": [
          "new_password",
          "token",
          "uid"
        ]
      },
      "PatchedSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 128
          },
          "storage": {
            "type": "string",
            "format": "uuid"
          },
          "things_in_sections": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "PatchedStorage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 128
          },
          "owner": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "readOnly": true
          },
          "sections": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "tags": {
            "type": "string"
          }
        }
      },
      "PatchedThing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "things_instances": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "category": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tags": {
            "type": "string"
          }
        }
      },
      "PatchedThingCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "icon_label": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "things": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "PatchedThingInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "section": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "format": "uuid"
          },
          "count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          }
        }
      },
      "PatchedUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "readOnly": true,
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
          }
        }
      },
      "Section": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 128
          },
          "storage": {
            "type": "string",
            "format": "uuid"
          },
          "things_in_sections": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "id",
          "name",
          "storage",
          "things_in_sections"
        ]
      },
      "SendEmailReset": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "SetPassword": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string"
          },
          "current_password": {
            "type": "string"
          }
        },
        "required": [
          "current_password",
          "new_password"
        ]
      },
      "SetUsername": {
        "type": "object",
        "properties": {
          "current_password": {
            "type": "string"
          },
          "new_username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          }
        },
        "required": [
          "current_password",
          "new_username"
        ]
      },
      "Storage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 128
          },
          "owner": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "readOnly": true
          },
          "sections": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "tags": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "owner",
          "sections",
          "tags"
        ]
      },
      "Thing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "things_instances": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "category": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tags": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "id",
          "name",
          "tags",
          "things_instances"
        ]
      },
      "ThingCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "icon_label": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "things": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "icon_label",
          "id",
          "name",
          "things"
        ]
      },
      "ThingInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "section": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "format": "uuid"
          },
          "count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          }
        },
        "required": [
          "count",
          "id",
          "section",
          "type"
        ]
      },
      "TokenObtainPair": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "password",
          "username"
        ]
      },
      "TokenRefresh": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "string"
          }
        },
        "required": [
          "refresh"
        ]
      },
      "TokenVerify": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "readOnly": true,
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
          }
        },
        "required": [
          "id",
          "username"
        ]
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "id",
          "password",
          "username"
        ]
      },
      "UsernameResetConfirm": {
        "type": "object",
        "properties": {
          "new_username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          }
        },
        "required": [
          "new_username"
        ]
      }
    },
    "securitySchemes": {
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Bearer"
      }
    }
  }
}